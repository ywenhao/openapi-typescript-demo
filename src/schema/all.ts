/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/account': {
    get: operations['Account_GetAccount']
  }
  '/v1/account/password': {
    put: operations['Account_UpdateAccountPassword']
  }
  '/v1/admin': {
    get: operations['Admin_ListAdmin']
    put: operations['Admin_UpdateAdmin']
    post: operations['Admin_CreateAdmin']
  }
  '/v1/admin/password': {
    put: operations['Admin_UpdateAdminPassword']
  }
  '/v1/admin/{id}': {
    get: operations['Admin_GetAdmin']
    delete: operations['Admin_DeleteAdmin']
  }
  '/v1/admin_login_record': {
    post: operations['AdminLoginRecord_ListAdminLoginRecord']
  }
  '/v1/daily_statistic': {
    get: operations['DailyStatistic_ListDailyStatistic']
  }
  '/v1/node': {
    get: operations['Node_ListNode']
  }
  '/v1/node/statistics': {
    get: operations['Node_GetNodeStatistics']
  }
  '/v1/node/tcc/statistics': {
    get: operations['Node_GetNodeTCCStatistics']
  }
  '/v1/node/{id}': {
    get: operations['Node_GetNode']
    put: operations['Node_UpdateNode']
    delete: operations['Node_DeleteNode']
  }
  '/v1/node_group': {
    get: operations['NodeGroup_ListNodeGroup']
    post: operations['NodeGroup_CreateNodeGroup']
  }
  '/v1/node_group/{id}': {
    get: operations['NodeGroup_GetNodeGroup']
    put: operations['NodeGroup_UpdateNodeGroup']
    delete: operations['NodeGroup_DeleteNodeGroup']
  }
  '/v1/node_groups': {
    delete: operations['NodeGroup_DeleteNodeGroups']
  }
  '/v1/node_pack_task': {
    get: operations['NodePackTask_ListNodePackTask']
  }
  '/v1/nodes': {
    put: operations['Node_UpdateNodes']
    delete: operations['Node_DeleteNodes']
  }
  '/v1/pack_task': {
    get: operations['PackTask_ListPackTask']
  }
  '/v1/pack_task/statistics': {
    get: operations['PackTask_GetPackTaskStatistics']
  }
  '/v1/session': {
    post: operations['Session_CreateSession']
  }
  '/v1/system_config': {
    get: operations['SystemConfig_ListSystemConfig']
    put: operations['SystemConfig_UpdateSystemConfig']
  }
  '/v1/tcc/ko': {
    get: operations['TCC_GetTCCKo']
  }
  '/v1/tcc/node': {
    post: operations['TCC_CreateTCCNode']
  }
  '/v1/tcc/task': {
    get: operations['TCC_GetTCCTask']
    post: operations['TCC_CreateTCCTask']
  }
}

export interface definitions {
  /** 获取账户回复 */
  accountGetAccountReply: {
    /** 用户信息 */
    admin?: definitions['adminAdminInfo']
  }
  /** 更新账户密码回复 */
  accountUpdateAccountPasswordReply: { [key: string]: unknown }
  /** 更新账户密码请求 */
  accountUpdateAccountPasswordRequest: {
    /**
     * 密码，6-20个字符，可包含字母、数字及标点符号（除空格）
     * @example 123456
     */
    password?: string
    /**
     * 密码，6-20个字符，可包含字母、数字及标点符号（除空格）
     * @example 234567
     */
    new_password?: string
    /**
     * 密码，6-20个字符，可包含字母、数字及标点符号（除空格）
     * @example 234567
     */
    repeat_new_password?: string
  }
  /** 管理员信息 */
  adminAdminInfo: {
    /**
     * 用户Id
     * Format: int64
     * @example 11110111
     */
    id?: string
    /**
     * 用户名
     * @example admin
     */
    user_name?: string
    /**
     * 角色
     * Format: int32
     * @example 1
     */
    role?: number
    /**
     * 最后一次登录时间
     * Format: int64
     * @example 1891238389
     */
    login_time?: string
    /**
     * 最后一次登录ip
     * @example 192.188.2.1
     */
    login_ip?: string
    /**
     * ip所在地
     * @example 中国.成都
     */
    ip_addr?: string
    /**
     * 创建时间
     * Format: int64
     * @example 1234242421
     */
    created_at?: string
    /**
     * 状态 1-启用 2-禁用
     * Format: int32
     */
    status?: number
    /** 备注 */
    remark?: string
  }
  /** 添加管理员信息 回复 */
  adminCreateAdminReply: { [key: string]: unknown }
  /** 添加管理员信息 请求 */
  adminCreateAdminRequest: {
    /**
     * 用户名 4-18个字符
     * @example admin
     */
    username?: string
    /**
     * 状态 1-开启 2-关闭
     * Format: int32
     * @example 1
     */
    status?: number
    /** 备注信息，非必填，200字内； */
    remark?: string
  } & {
    true: unknown
    true: unknown
  }
  /** 删除管理员回复 */
  adminDeleteAdminReply: { [key: string]: unknown }
  /** 获取管理员信息 回复 */
  adminGetAdminReply: {
    /** 用户信息 */
    admin?: definitions['adminAdminInfo']
  }
  /** 获取管理员列表 回复 */
  adminListAdminReply: {
    /** 管理员列表 */
    list?: definitions['adminAdminInfo'][]
    /**
     * 总条数
     * Format: int64
     */
    total?: string
  }
  /** 重置管理员密码 回复 */
  adminUpdateAdminPasswordReply: { [key: string]: unknown }
  /** 重置管理员密码 请求 */
  adminUpdateAdminPasswordRequest: {
    /**
     * 用户id
     * Format: int64
     */
    id?: string
  }
  /** 更新管理员信息 回复 */
  adminUpdateAdminReply: { [key: string]: unknown }
  /** 更新管理员信息 请求 */
  adminUpdateAdminRequest: {
    /**
     * 管理员id
     * Format: int64
     */
    id?: string
    /**
     * 状态 1-开启 2-关闭
     * Format: int32
     * @example 1
     */
    status?: number
    /** 备注信息，非必填，200字内； */
    remark?: string
  } & {
    true: unknown
  }
  /** 获取系统配置列表 回复 */
  configListSystemConfigReply: {
    info?: definitions['configSystemConfigInfo']
  }
  configSystemConfigInfo: {
    /**
     * 打包服务开关 1.打开,2关闭
     * Format: int32
     */
    pack_service_switch?: number
    /** 上报地址 */
    report_url?: string
  }
  /** 更新系统设置 回复 */
  configUpdateSystemConfigReply: { [key: string]: unknown }
  /** 创建节点分组信息 回复 */
  groupCreateNodeGroupReply: { [key: string]: unknown }
  /** 创建节点分组信息 请求 */
  groupCreateNodeGroupRequest: {
    /** 节点分组名称 */
    name?: string
    /** 备注 */
    remark?: string
    /**
     * 排序
     * Format: int64
     */
    order?: string
    /** 节点ids */
    node_ids?: string[]
  }
  /** 删除单个节点分组 回复 */
  groupDeleteNodeGroupReply: { [key: string]: unknown }
  /** 删除多个节点分组 回复 */
  groupDeleteNodeGroupsReply: { [key: string]: unknown }
  /** 删除多个节点分组 请求 */
  groupDeleteNodeGroupsRequest: {
    /** 节点分组ids */
    ids?: string[]
  }
  /** 获取单个节点分组信息 回复 */
  groupGetNodeGroupReply: {
    info?: definitions['groupNodeGroupInfo']
  }
  /** 获取节点分组列表回复 */
  groupListNodeGroupReply: {
    list?: definitions['groupNodeGroupInfo'][]
    /** Format: int64 */
    total?: string
  }
  /** 节点分组信息 */
  groupNodeGroupInfo: {
    /**
     * id
     * Format: int64
     */
    id?: string
    /** 节点分组名称 */
    name?: string
    /** 备注 */
    remark?: string
    /**
     * 排序
     * Format: int64
     */
    order?: string
    /**
     * 创建日期
     * Format: int64
     */
    created_at?: string
    /**
     * 关联节点数量
     * Format: int64
     */
    node_num?: string
  }
  /** 更新节点分组信息 回复 */
  groupUpdateNodeGroupReply: { [key: string]: unknown }
  /** cpu信息 */
  nodeCPUInfo: {
    devices?: definitions['nodeCPUInfoDevice'][]
  }
  nodeCPUInfoDevice: {
    /** Format: int32 */
    cores?: number
    model_name?: string
    vendor?: string
  }
  /** 删除单个节点 回复 */
  nodeDeleteNodeReply: { [key: string]: unknown }
  /** 删除多个节点 回复 */
  nodeDeleteNodesReply: { [key: string]: unknown }
  /** 删除多个节点 请求 */
  nodeDeleteNodesRequest: {
    /** 节点ids */
    ids?: string[]
  }
  /** 获取单个节点信息 回复 */
  nodeGetNodeReply: {
    info?: definitions['nodeNodeInfo']
  }
  /** 获取节点统计 回复 */
  nodeGetNodeStatisticsReply: {
    /**
     * 总数
     * Format: int64
     */
    total_num?: string
    /**
     * 在线数
     * Format: int64
     */
    online_num?: string
    /**
     * 离线数
     * Format: int64
     */
    offline_num?: string
  }
  /** 获取节点TCC统计数量 回复 */
  nodeGetNodeTCCStatisticsReply: {
    /**
     * 总数
     * Format: int64
     */
    total_num?: string
    /**
     * 启用中
     * Format: int64
     */
    enable_num?: string
    /**
     * 禁用中
     * Format: int64
     */
    disable_num?: string
  }
  nodeHardwareInfo: {
    /** 主板信息 */
    motherboard?: definitions['nodeMotherBoardInfo']
    /** cpu信息 */
    cpu?: definitions['nodeCPUInfo']
    /** 内存信息 */
    memory?: definitions['nodeMemoryInfo']
    /** 磁盘信息 */
    storage?: definitions['nodeStorageInfo']
    /** 网络控制器信息 */
    network_controller?: definitions['nodeNetworkControllerInfo']
  }
  /** 获取节点列表回复 */
  nodeListNodeReply: {
    list?: definitions['nodeNodeInfo'][]
    /** Format: int64 */
    total?: string
  }
  /** 内存信息 */
  nodeMemoryInfo: {
    devices?: definitions['nodeMemoryInfoDevice'][]
    /** Format: uint64 */
    total?: string
    /** Format: uint64 */
    available?: string
  }
  nodeMemoryInfoDevice: {
    manufacturer?: string
    size?: string
    type?: string
  }
  nodeMotherBoardInfo: {
    vendor?: string
    product?: string
  }
  nodeNetworkControllerInfo: {
    devices?: definitions['nodeNetworkControllerInfoDevice'][]
  }
  nodeNetworkControllerInfoDevice: {
    vendor?: string
    product?: string
  }
  /** 节点信息 */
  nodeNodeInfo: {
    /**
     * 节点id
     * Format: int64
     */
    id?: string
    /** 节点名称 */
    name?: string
    /**
     * 分组id
     * Format: int64
     */
    group_id?: string
    /** 分组名称 */
    group_name?: string
    /**
     * 节点状态 1:启用,2:禁用
     * Format: int32
     */
    node_status?: number
    /**
     * tcc状态 1:启用,2:禁用,3.安装失败
     * Format: int32
     */
    tcc_status?: number
    /**
     * 下次tcc状态
     * Format: int32
     */
    next_tcc_status?: number
    /**
     * 内核自带的bbr状态 1:启用,2:禁用
     * Format: int32
     */
    bbr_status?: number
    /** tcc版本 */
    tcc_version?: string
    /** 最新的tcc版本 */
    latest_tcc_version?: string
    /**
     * 最后上报时间
     * Format: int64
     */
    last_reported_at?: string
    /** 系统平台 CentOS 7.9 */
    platform?: string
    /** 内核版本 3.10.0-1160.81.1.el7.x86_64 */
    kernel_version?: string
    /** 内核架构 x86_64 */
    kernel_arch?: string
    /** ip列表 */
    ips?: string[]
    /** mac列表 */
    macs?: string[]
    /** 主机id */
    host_id?: string
    /** uuid */
    uuid?: string
    /**
     * 添加日期
     * Format: int64
     */
    created_at?: string
    /** 硬件信息 */
    hardware?: definitions['nodeHardwareInfo']
  }
  /** 磁盘信息 */
  nodeStorageInfo: {
    devices?: definitions['nodeStorageInfoDevice'][]
  }
  nodeStorageInfoDevice: {
    /** 名字 */
    name?: string
    /** 型号 */
    model?: string
    /** 供应商 */
    vendor?: string
    /** 序列号 */
    serial?: string
    /** 容量 */
    size?: string
  }
  /** 更新节点信息 回复 */
  nodeUpdateNodeReply: { [key: string]: unknown }
  /** 更新节点信息 回复 */
  nodeUpdateNodesReply: { [key: string]: unknown }
  /** 更新节点信息 请求 */
  nodeUpdateNodesRequest: {
    /** 节点ids */
    ids?: string[]
    /**
     * 启用禁用tcc 下个tcc状态
     * Format: int32
     */
    next_tcc_status?: number
  }
  protobufAny: {
    type_url?: string
    /** Format: byte */
    value?: string
  }
  /** 管理员登录记录信息 */
  recordAdminLoginRecordInfo: {
    /**
     * id 序号
     * Format: int64
     * @example 11110
     */
    id?: string
    /**
     * 用户名
     * @example admin
     */
    user_name?: string
    /**
     * 最后一次登录时间
     * Format: int64
     * @example 1762347242
     */
    login_time?: string
    /**
     * 最后一次登录ip
     * @example 192.168.2.1
     */
    login_ip?: string
    /**
     * ip所在地
     * @example 中国.成都
     */
    login_addr?: string
    /** 系统名称加版本号 */
    system_info?: string
    /** 浏览器加版本号 */
    browser_info?: string
    /** 设备信息 */
    device_info?: string
  }
  /** 获取管理员登录记录列表 回复 */
  recordListAdminLoginRecordReply: {
    /** 登录记录列表 */
    list?: definitions['recordAdminLoginRecordInfo'][]
    /**
     * 总条数
     * Format: int64
     */
    total?: string
  }
  /** 获取管理员登录记录列表 请求 */
  recordListAdminLoginRecordRequest: {
    /**
     * 管理员id
     * Format: int64
     */
    admin_id?: string
    /**
     * 登录筛选开始时间
     * Format: int64
     */
    begin_at?: string
    /**
     * 登录筛选结束时间
     * Format: int64
     */
    end_at?: string
    /**
     * 起始条数，默认为0
     * Format: int32
     */
    offset?: number
    /**
     * 分页条数，默认为10 最多每次拿500条
     * Format: int32
     */
    limit?: number
  }
  rpcStatus: {
    /** Format: int32 */
    code?: number
    message?: string
    details?: definitions['protobufAny'][]
  }
  /** 登录(创建新的会话)回复 */
  sessionCreateSessionReply: {
    /** 用户信息 */
    admin?: definitions['adminAdminInfo']
    /** 访问token */
    token?: string
  }
  /** 登录(创建新的会话)请求 */
  sessionCreateSessionRequest: {
    /**
     * 用户名 4-18个字符
     * @example admin
     */
    username?: string
    /**
     * 密码，6-20个字符，可包含字母、数字及标点符号（除空格）
     * @example 123456
     */
    password?: string
  } & {
    true: unknown
  }
  /** 打包信息 */
  taskDailyStatisticInfo: {
    /**
     * 新增节点数量
     * Format: int64
     */
    node_increase_num?: string
    /**
     * TCC安装数量
     * Format: int64
     */
    tcc_install_num?: string
    /**
     * 打包任务数量
     * Format: int64
     */
    pack_task_num?: string
    /**
     * 日期 某天
     * Format: int64
     */
    time_day?: string
  }
  /** 获取打包申请统计 回复 */
  taskGetPackTaskStatisticsReply: {
    /**
     * 总数
     * Format: int64
     */
    total_num?: string
    /**
     * 失败数量
     * Format: int64
     */
    fail_num?: string
  }
  /** 每日统计 回复 */
  taskListDailyStatisticReply: {
    list?: definitions['taskDailyStatisticInfo'][]
    /** Format: int64 */
    total?: string
  }
  /** 获取打包任务列表回复 */
  taskListNodePackTaskReply: {
    list?: definitions['taskNodePackTaskInfo'][]
    /** Format: int64 */
    total?: string
  }
  /** 获取打包任务列表回复 */
  taskListPackTaskReply: {
    list?: definitions['taskPackTaskInfo'][]
    /** Format: int64 */
    total?: string
  }
  /** 打包信息 */
  taskNodePackTaskInfo: {
    /**
     * id
     * Format: int64
     */
    id?: string
    /**
     * 节点id
     * Format: int64
     */
    node_id?: string
    /** 节点名称 */
    node_name?: string
    /** 系统平台 CentOS 7.9.2009 */
    platform?: string
    /** 内核版本 5.4.224 */
    kernel_version?: string
    /** 内核架构 x86_64 */
    kernel_arch?: string
    /** tcc版本 */
    tcc_version?: string
    /**
     * 打包状态 1.待打包(预留) 2.打包中 3.打包成功 4.打包失败
     * Format: int32
     */
    pack_status?: number
    /**
     * 包裹状态 1.不存在 2.已存在
     * Format: int32
     */
    package_status?: number
    /**
     * 创建时间
     * Format: int64
     */
    created_at?: string
    /**
     * 开始打包时间
     * Format: int64
     */
    pack_begin_at?: string
    /**
     * 结束打包时间
     * Format: int64
     */
    pack_end_at?: string
  }
  /** 打包信息 */
  taskPackTaskInfo: {
    /**
     * 打包任务id
     * Format: int64
     */
    id?: string
    /** 系统平台 centos 7.9.2009 */
    platform?: string
    /** 内核版本 5.4.224 */
    kernel_version?: string
    /** 内核架构 x86_64 */
    kernel_arch?: string
    /** tcc版本 */
    tcc_version?: string
    /**
     * 打包状态 1.待打包(预留) 2.打包中 3.打包成功 4.打包失败
     * Format: int32
     */
    pack_status?: number
    /**
     * 创建时间
     * Format: int64
     */
    created_at?: string
    /**
     * 开始打包时间
     * Format: int64
     */
    pack_begin_at?: string
    /**
     * 结束打包时间
     * Format: int64
     */
    pack_end_at?: string
  }
  /** 测试添加节点请求 回复 */
  tccCreateTCCNodeReply: {
    info?: definitions['nodeNodeInfo']
  }
  /** 节点上报 */
  tccCreateTCCNodeRequest: {
    /**
     * tcc状态 1:启用,2:禁用,3.安装失败
     * Format: int32
     */
    tcc_status?: number
    /**
     * 内核自带的bbr状态 1:启用,2:禁用
     * Format: int32
     */
    bbr_status?: number
    /** tcc版本 1.0.0 */
    tcc_version?: string
    /** 系统平台 CentOS 7.9.2009 */
    platform?: string
    /** 内核版本 3.10.0-1160.81.1.el7.x86_64 */
    kernel_version?: string
    /** 内核架构 x86_64 */
    kernel_arch?: string
    /** ip列表 */
    ips?: string[]
    /** mac列表 */
    macs?: string[]
    /** 主机id */
    host_id?: string
    /** 硬件信息 */
    hardware?: definitions['nodeHardwareInfo']
    /** 节点版本 */
    node_version?: string
  }
  tccCreateTCCTaskReq: {
    platform?: string
    kernel_version?: string
    kernel_arch?: string
    /** Format: int64 */
    node_id?: string
  }
  tccCreateTCCTaskRes: {
    /** Format: int32 */
    status?: number
    /** Format: int64 */
    id?: string
  }
  tccGetTCCKoRes: {
    /** Format: byte */
    ko?: string
  }
  tccGetTCCTaskRes: {
    /** Format: int32 */
    status?: number
  }
}

export interface operations {
  Account_GetAccount: {
    responses: {
      /** 用户信息 */
      200: {
        schema: definitions['adminAdminInfo']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Account_UpdateAccountPassword: {
    parameters: {
      body: {
        body: definitions['accountUpdateAccountPasswordRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['accountUpdateAccountPasswordReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_ListAdmin: {
    parameters: {
      query: {
        /** 起始条数，默认为0. */
        offset?: number
        /** 分页条数，默认为10 最多每次拿500条. */
        limit?: number
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['adminListAdminReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_UpdateAdmin: {
    parameters: {
      body: {
        body: definitions['adminUpdateAdminRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['adminUpdateAdminReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_CreateAdmin: {
    parameters: {
      body: {
        body: definitions['adminCreateAdminRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['adminCreateAdminReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_UpdateAdminPassword: {
    parameters: {
      body: {
        body: definitions['adminUpdateAdminPasswordRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['adminUpdateAdminPasswordReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_GetAdmin: {
    parameters: {
      path: {
        /** 管理id */
        id: string
      }
    }
    responses: {
      /** 用户信息 */
      200: {
        schema: definitions['adminAdminInfo']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Admin_DeleteAdmin: {
    parameters: {
      path: {
        /** 管理id */
        id: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['adminDeleteAdminReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  AdminLoginRecord_ListAdminLoginRecord: {
    parameters: {
      body: {
        body: definitions['recordListAdminLoginRecordRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['recordListAdminLoginRecordReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  DailyStatistic_ListDailyStatistic: {
    parameters: {
      query: {
        /** 开始时间. */
        begin_at?: string
        /** 结束时间. */
        end_at?: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['taskListDailyStatisticReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_ListNode: {
    parameters: {
      query: {
        /** 分组id. */
        group_id?: string
        /** 节点状态. */
        node_status?: number
        /** tcc状态. */
        tcc_status?: number
        /** 搜索 节点名称. */
        name?: string
        /** 搜索 内核信息. */
        kernel_version?: string
        /** 搜索 tcc版本. */
        tcc_version?: string
        /** 起始条数，默认为0. */
        offset?: number
        /** 分页条数，默认为10 最多每次拿500条. */
        limit?: number
        /** 搜索 ip. */
        ip?: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeListNodeReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_GetNodeStatistics: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeGetNodeStatisticsReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_GetNodeTCCStatistics: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeGetNodeTCCStatisticsReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_GetNode: {
    parameters: {
      path: {
        /** 节点id */
        id: string
      }
    }
    responses: {
      200: {
        schema: definitions['nodeNodeInfo']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_UpdateNode: {
    parameters: {
      path: {
        /** 节点id */
        id: string
      }
      body: {
        body: {
          /** 节点名称 */
          name?: string
          /**
           * 分组id
           * Format: int64
           */
          group_id?: string
          /**
           * 启用禁用tcc 下个tcc状态
           * Format: int32
           */
          next_tcc_status?: number
        }
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeUpdateNodeReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_DeleteNode: {
    parameters: {
      path: {
        /** 节点id */
        id: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeDeleteNodeReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_ListNodeGroup: {
    parameters: {
      query: {
        name?: string
        remark?: string
        /** 起始条数，默认为0. */
        offset?: number
        /** 分页条数，默认为10 最多每次拿500条. */
        limit?: number
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['groupListNodeGroupReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_CreateNodeGroup: {
    parameters: {
      body: {
        body: definitions['groupCreateNodeGroupRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['groupCreateNodeGroupReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_GetNodeGroup: {
    parameters: {
      path: {
        /** 节点分组id */
        id: string
      }
    }
    responses: {
      200: {
        schema: definitions['groupNodeGroupInfo']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_UpdateNodeGroup: {
    parameters: {
      path: {
        /** 节点分组id */
        id: string
      }
      body: {
        body: {
          /** 节点分组名称 */
          name?: string
          /** 备注 */
          remark?: string
          /**
           * 排序
           * Format: int64
           */
          order?: string
          /** 节点ids */
          node_ids?: string[]
        }
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['groupUpdateNodeGroupReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_DeleteNodeGroup: {
    parameters: {
      path: {
        /** 节点分组id */
        id: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['groupDeleteNodeGroupReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodeGroup_DeleteNodeGroups: {
    parameters: {
      body: {
        body: definitions['groupDeleteNodeGroupsRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['groupDeleteNodeGroupsReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  NodePackTask_ListNodePackTask: {
    parameters: {
      query: {
        /** 打包状态 0,2,3,4. */
        pack_status?: number
        /** 包可用状态 0,1,2. */
        package_status?: number
        /** 系统信息. */
        platform?: string
        /** 节点名称. */
        node_name?: string
        /** 内核版本. */
        kernel_version?: string
        /** 起始条数，默认为0. */
        offset?: number
        /** 分页条数，默认为10 最多每次拿500条. */
        limit?: number
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['taskListNodePackTaskReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_UpdateNodes: {
    parameters: {
      body: {
        body: definitions['nodeUpdateNodesRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeUpdateNodesReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Node_DeleteNodes: {
    parameters: {
      body: {
        body: definitions['nodeDeleteNodesRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['nodeDeleteNodesReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  PackTask_ListPackTask: {
    parameters: {
      query: {
        /** 打包状态 0,2,3,4. */
        pack_status?: number
        /** 内核版本. */
        kernel_version?: string
        /** 系统信息. */
        platform?: string
        /** 起始条数，默认为0. */
        offset?: number
        /** 分页条数，默认为10 最多每次拿500条. */
        limit?: number
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['taskListPackTaskReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  PackTask_GetPackTaskStatistics: {
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['taskGetPackTaskStatisticsReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  Session_CreateSession: {
    parameters: {
      body: {
        body: definitions['sessionCreateSessionRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['sessionCreateSessionReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  SystemConfig_ListSystemConfig: {
    responses: {
      200: {
        schema: definitions['configSystemConfigInfo']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  SystemConfig_UpdateSystemConfig: {
    parameters: {
      body: {
        body: definitions['configSystemConfigInfo']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['configUpdateSystemConfigReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  TCC_GetTCCKo: {
    parameters: {
      query: {
        id?: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['tccGetTCCKoRes']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  TCC_CreateTCCNode: {
    parameters: {
      body: {
        body: definitions['tccCreateTCCNodeRequest']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['tccCreateTCCNodeReply']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  TCC_GetTCCTask: {
    parameters: {
      query: {
        id?: string
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['tccGetTCCTaskRes']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
  TCC_CreateTCCTask: {
    parameters: {
      body: {
        body: definitions['tccCreateTCCTaskReq']
      }
    }
    responses: {
      /** A successful response. */
      200: {
        schema: definitions['tccCreateTCCTaskRes']
      }
      /** An unexpected error response. */
      default: {
        schema: definitions['rpcStatus']
      }
    }
  }
}

export interface external {}
